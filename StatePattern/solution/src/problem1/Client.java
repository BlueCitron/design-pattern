package problem1;

public class Client {

    /**
     *  스테이트 패턴(State Pattern)
     *
     *  A) 다음 용어들에 대해 설명해보세요
     *      - 상태
     *      - 상태 진입
     *
     *      상태) 객체가 시스템에 존재하는 동안 가질 수 있는 어떤 조건이나 상황
     *
     *      상태 진입)
     *          객체의 한 상태에서 다른 상태로 이동하는 것.
     *          보통 특정 이벤트가 발생한 후 명세된 조건을 만족한 경우에 이루어짐.
     *
     *  B) 다음의 형광등 예제에서 문제점이 무엇인가요? 어떤 해결책이 필요한가요?
     *     문제점) 새로운 상태를 추가하기 위해선 기존의 코드가 변경 되어야 한다. (OCP 위배)
     *     해결) 문제를 해결하기 위해선 변하는 부분을 찾아 캡슐화해야되는데, 이때 변하는 것은 시스템의 상태다.
     *     상태를 캡슐화하고 상태에 의존적인 행위들도 상태 클래스에 같이 두어 특정 상태에 따른 행위를 구현하도록 바꾼다.
     *
     *  C) 스테이트 패턴을 토대로 코드를 개선해보세요. 취침등(SLEEPING) 상태일 때를 추가해 작성하세요.
     *      ON: ON버튼 클릭 -> 취침등
     *      SLEEPING: ON버튼 클릭 -> 일반등
     */


    public static void main(String[] args) {
        Light light = new Light();

        light.onButtonPush();
        light.onButtonPush();

        light.offButtonPush();
        light.offButtonPush();
    }

    /**
     * A) 스테이트 패턴은 무슨 패턴인가요? 어떤 이점이 있나요?
     *      정의1) 상태에 따라 동일한 작업이 다른 방식으로 실행될 때 해당 상태가 작업을 수행하도록 위임하는 패턴.
     *      정의2)
     *          - 상태를 캡슐화하고 상태에 의존적인 행위들을 상태가 수행하도록 위임한다.
     *          - 상태에 따른 행위를 인터페이스로 만들고 각각의 상태에 따른 행위를 상태별로 구현한다.
     *          - 인터페이스의 메서드들은 상태별로 수행해야하는 행위들을 뜻한다.
     *      이점) 기존의 코드를 변경하지 않고도 새로운 상태에 따른 행위를 추가하기 쉬워진다.
     */
}
